"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/account/page",{

/***/ "(app-pages-browser)/./src/api/followCurrencyAPI.ts":
/*!**************************************!*\
  !*** ./src/api/followCurrencyAPI.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FollowCurrencyAPI: function() { return /* binding */ FollowCurrencyAPI; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nconst FollowCurrencyAPI = {\n    async getFollowCurrencyHistoricSpotPrice (currency) {\n        const currentDate = new Date();\n        const year = +currentDate.getFullYear() - 1;\n        const month = (currentDate.getMonth() + 1).toString().padStart(2, \"0\");\n        const day = currentDate.getDate().toString().padStart(2, \"0\");\n        const formattedDate = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n        return await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.coinbase.com/v2/prices/\".concat(currency, \"-USD/spot?date=\").concat(formattedDate));\n    },\n    async getExchangeRate (currency) {\n        return await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"https://api.coinbase.com/v2/prices/\".concat(currency, \"-USD/spot\"));\n    }\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkvZm9sbG93Q3VycmVuY3lBUEkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUI7QUFHekIsTUFBTUMsb0JBQW9CO0lBQ3RCLE1BQU1DLG9DQUFtQ0MsUUFBMEM7UUFDL0UsTUFBTUMsY0FBYyxJQUFJQztRQUN4QixNQUFNQyxPQUFPLENBQUNGLFlBQVlHLFdBQVcsS0FBSztRQUMxQyxNQUFNQyxRQUFRLENBQUNKLFlBQVlLLFFBQVEsS0FBSyxHQUFHQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxHQUFHO1FBQ2xFLE1BQU1DLE1BQU1SLFlBQVlTLE9BQU8sR0FBR0gsUUFBUSxHQUFHQyxRQUFRLENBQUMsR0FBRztRQUN6RCxNQUFNRyxnQkFBZ0IsR0FBV04sT0FBUkYsTUFBSyxLQUFZTSxPQUFUSixPQUFNLEtBQU8sT0FBSkk7UUFFMUMsT0FBTyxNQUFNWiw2Q0FBS0EsQ0FBQ2UsR0FBRyxDQUFDLHNDQUFnRUQsT0FBMUJYLFVBQVMsbUJBQStCLE9BQWRXO0lBQzNGO0lBQ0EsTUFBTUUsaUJBQWdCYixRQUFnQjtRQUNsQyxPQUFPLE1BQU1ILDZDQUFLQSxDQUFDZSxHQUFHLENBQWdDLHNDQUErQyxPQUFUWixVQUFTO0lBQ3pHO0FBQ0o7QUFJNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwaS9mb2xsb3dDdXJyZW5jeUFQSS50cz9hOTdkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcydcclxuaW1wb3J0IHtTdXBwb3J0ZWRDdXJyZW5jaWVzVHlwZX0gZnJvbSBcIkBzdG9yZS9hY2NvdW50U3RvcmUvYWNjb3VudFR5cGVzXCI7XHJcblxyXG5jb25zdCBGb2xsb3dDdXJyZW5jeUFQSSA9IHtcclxuICAgIGFzeW5jIGdldEZvbGxvd0N1cnJlbmN5SGlzdG9yaWNTcG90UHJpY2UoY3VycmVuY3k6IHN0cmluZyB8IFN1cHBvcnRlZEN1cnJlbmNpZXNUeXBlKSB7XHJcbiAgICAgICAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IHllYXIgPSArY3VycmVudERhdGUuZ2V0RnVsbFllYXIoKSAtIDE7XHJcbiAgICAgICAgY29uc3QgbW9udGggPSAoY3VycmVudERhdGUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsgXHJcbiAgICAgICAgY29uc3QgZGF5ID0gY3VycmVudERhdGUuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTtcclxuICAgICAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDtcclxuXHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly9hcGkuY29pbmJhc2UuY29tL3YyL3ByaWNlcy8ke2N1cnJlbmN5fS1VU0Qvc3BvdD9kYXRlPSR7Zm9ybWF0dGVkRGF0ZX1gKVxyXG4gICAgfSxcclxuICAgIGFzeW5jIGdldEV4Y2hhbmdlUmF0ZShjdXJyZW5jeTogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIGF3YWl0IGF4aW9zLmdldDx7YW1vdW50OnN0cmluZywgYmFzZTpzdHJpbmcsfT4oYGh0dHBzOi8vYXBpLmNvaW5iYXNlLmNvbS92Mi9wcmljZXMvJHtjdXJyZW5jeX0tVVNEL3Nwb3RgKVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCB7IEZvbGxvd0N1cnJlbmN5QVBJIH0iXSwibmFtZXMiOlsiYXhpb3MiLCJGb2xsb3dDdXJyZW5jeUFQSSIsImdldEZvbGxvd0N1cnJlbmN5SGlzdG9yaWNTcG90UHJpY2UiLCJjdXJyZW5jeSIsImN1cnJlbnREYXRlIiwiRGF0ZSIsInllYXIiLCJnZXRGdWxsWWVhciIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiZGF5IiwiZ2V0RGF0ZSIsImZvcm1hdHRlZERhdGUiLCJnZXQiLCJnZXRFeGNoYW5nZVJhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/followCurrencyAPI.ts\n"));

/***/ })

});